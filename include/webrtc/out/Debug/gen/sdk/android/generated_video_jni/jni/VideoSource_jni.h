// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/webrtc/VideoSource

#ifndef org_webrtc_VideoSource_JNI
#define org_webrtc_VideoSource_JNI

#include <jni.h>

#include "../../../../../../../sdk/android/src/jni/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char kClassPath_org_webrtc_VideoSource[];
const char kClassPath_org_webrtc_VideoSource[] = "org/webrtc/VideoSource";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass> g_org_webrtc_VideoSource_clazz(nullptr);
#ifndef org_webrtc_VideoSource_clazz_defined
#define org_webrtc_VideoSource_clazz_defined
inline jclass org_webrtc_VideoSource_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env, kClassPath_org_webrtc_VideoSource,
      &g_org_webrtc_VideoSource_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace  webrtc {
namespace jni {

static jlong JNI_VideoSource_GetInternalSource(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller,
    jlong source);

JNI_GENERATOR_EXPORT jlong Java_org_webrtc_VideoSource_nativeGetInternalSource(
    JNIEnv* env,
    jclass jcaller,
    jlong source) {
  return JNI_VideoSource_GetInternalSource(env, base::android::JavaParamRef<jclass>(env, jcaller),
      source);
}

static void JNI_VideoSource_AdaptOutputFormat(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller,
    jlong source,
    jint width,
    jint height,
    jint fps);

JNI_GENERATOR_EXPORT void Java_org_webrtc_VideoSource_nativeAdaptOutputFormat(
    JNIEnv* env,
    jclass jcaller,
    jlong source,
    jint width,
    jint height,
    jint fps) {
  return JNI_VideoSource_AdaptOutputFormat(env, base::android::JavaParamRef<jclass>(env, jcaller),
      source, width, height, fps);
}


}  // namespace jni
}  // namespace  webrtc

#endif  // org_webrtc_VideoSource_JNI
